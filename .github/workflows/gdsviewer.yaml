name: gdsviewer
on:
  workflow_dispatch:

jobs:
  GDSView:
      permissions:
        pages: write      # to deploy to Pages
        id-token: write   # to verify the deployment originates from an appropriate source

      # Deploy to the github-pages environment
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

      runs-on: ubuntu-latest
      steps:
      
      - name: Buscar repo normal
        uses: actions/checkout@v3

      - name: Descargar GDS
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: flow.yaml
          workflow_conclusion: success
          name: GDS
      
      - name: Mover gds
        run: |
            mkdir ${{ github.workspace }}/gds/
            cp *.gds ${{ github.workspace }}/gds/

      - name: Buscar prerequisitos de PNG
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: librsvg2-bin pngquant
          version: tt05 # I think naming a version builds a reusable packages cache for that name.
        
      - name: Instalar Prerequisitos
        run: |
          pip install appdirs==1.4.4 cairocffi==1.6.0 CairoSVG==2.7.0 certifi==2023.5.7 cffi==1.15.1 charset-normalizer==3.1.0 click==8.1.3 cssselect2==0.7.0 defusedxml==0.7.1 gdstk==0.9.42 gitdb==4.0.10 GitPython==3.1.31 idna==3.4 importlib-resources==5.12.0 mistune==3.0.1 numpy==1.24.3 Pillow==9.5.0 pycparser==2.21 python-frontmatter==1.0.0 pytz==2023.3 PyYAML==6.0 requests==2.31.0 smmap==5.0.0 stripe==5.4.0 tinycss2==1.2.1 urllib3==2.0.3 wasmtime==9.0.0 webencodings==0.5.1 yowasp-runtime==1.22 yowasp-yosys==0.30.0.0.post538 zipp==3.15.0 pre-commit==3.4.0
          pre-commit install
                    
      - name: Render PNG from GDS
        shell: bash
        run: python3 gds2png.py

      - name: Upload gds_render (png) artifact
        uses: actions/upload-artifact@v3
        with:
          name: gds_render
          path: 'gds_render.png'
      
      - name: GDS3D
        uses: actions/checkout@v3
        with:
          repository: mbalestrini/GDS2glTF
        
      - name: Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies

      - name: Descargar GDS
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: flow.yaml
          workflow_conclusion: success
          name: GDS
      
      - uses: actions/download-artifact@v3
        with:
          name: gds_render

      - name: gds2gltf
        shell: bash
        run: |
          ls -lh
          python -m pip install numpy gdspy triangle pygltflib
          mkdir ${{ github.workspace }}/gh-pages/
          mv gds_render.png ./gh-pages/
          mv ${{ github.workspace }}/*.gds render.gds
          python3 gds2gltf.py render.gds
          cp render.gds.gltf gh-pages/render.gds.gltf

      - name: Crear HTML
        shell: bash
        run: |
          cat << EOF >> gh-pages/index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <title>View GLTF Model with Visibility Control</title>
          </head>
          <body>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/loaders/GLTFLoader.js"></script>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/controls/OrbitControls.js"></script>
          
              <div id="viewer"></div>
              <div id="controls">
                  <label><input type="checkbox" id="item1"> Item 1</label>
                  <label><input type="checkbox" id="item2"> Item 2</label>
                  <!-- Add more checkboxes for other items as needed -->
              </div>
          
              <script>
                  const scene = new THREE.Scene();
                  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
                  camera.position.z = 5;
          
                  const renderer = new THREE.WebGLRenderer();
                  renderer.setSize(window.innerWidth, window.innerHeight);
                  document.getElementById('viewer').appendChild(renderer.domElement);
          
                  const controls = new THREE.OrbitControls(camera, renderer.domElement);
          
                  const loader = new THREE.GLTFLoader();
                  loader.load('render.gds.gltf', (gltf) => {
                      const model = gltf.scene;
                      scene.add(model);
          
                      const item1Checkbox = document.getElementById('item1');
                      const item2Checkbox = document.getElementById('item2');
                      // Add more checkboxes and corresponding objects as needed
          
                      item1Checkbox.addEventListener('change', () => {
                          model.children[0].visible = item1Checkbox.checked;
                      });
          
                      item2Checkbox.addEventListener('change', () => {
                          model.children[1].visible = item2Checkbox.checked;
                      });
                      // Add more event listeners for other items as needed
                  });
          
                  const animate = () => {
                      requestAnimationFrame(animate);
                      controls.update();
                      renderer.render(scene, camera);
                  };
          
                  animate();
              </script>
          </body>
          </html>
          EOF

      - name: Subir Pagina
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'gh-pages'

      - name: Compartir con Github-Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Summary
        shell: bash
        run: |
          PAGE_URL=${{ steps.deployment.outputs.page_url }}
          PAGE_URL=$(echo "$PAGE_URL" | sed -e 's/\/$//')
          cat << EOF >> $GITHUB_STEP_SUMMARY
          # 3D Viewer
          [open 3D viewer](https://gds-viewer.tinytapeout.com/?model=$PAGE_URL/tinytapeout.gds.gltf)

          # 2D Preview
          ![png]($PAGE_URL/gds_render.png)
          EOF
